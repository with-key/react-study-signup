{"ast":null,"code":"import React from \"react\";\nimport { useFormik } from \"formik\"; //validate 는 객체를 반환한다.\n//SignupForm는 export할 컴포넌트 이름\n\nconst SignupForm = () => {\n  const validate = function (values) {\n    //values.name values.mail values.channel\n    //error.name error.mail error.channel\n    const error = {}; // name 로직\n\n    if (!values.name) {\n      error.name = \"필수 입력 정보 입니다\";\n    }\n\n    if (!values.mail) {\n      error.mail = \"필수 입력 정보 입니다\";\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n      error.mail = \"이메일의 형식이 올바르지 않습니다\";\n    }\n\n    if (!values.channel) {\n      error.channel = \"필수 입력 정보 입니다\";\n    }\n\n    const formik = useFormik({\n      //useFormik의 method : 각 form 의 초기값\n      initialValues: {\n        name: \"\",\n        mail: \"\",\n        channel: \"\"\n      },\n      //useFormik의 method : 각 form 의 validation check\n      validate\n    });\n    return;\n  };\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/Users/yesang-gi/Documents/workspace/atnp-signup/src/components/SignupForm.jsx"],"names":["React","useFormik","SignupForm","validate","values","error","name","mail","test","email","channel","formik","initialValues"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B,C,CAEA;AAEA;;AACA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,QAAQ,GAAG,UAAUC,MAAV,EAAkB;AACjC;AACA;AACA,UAAMC,KAAK,GAAG,EAAd,CAHiC,CAIjC;;AACA,QAAI,CAACD,MAAM,CAACE,IAAZ,EAAkB;AAChBD,MAAAA,KAAK,CAACC,IAAN,GAAa,cAAb;AACD;;AACD,QAAI,CAACF,MAAM,CAACG,IAAZ,EAAkB;AAChBF,MAAAA,KAAK,CAACE,IAAN,GAAa,cAAb;AACD,KAFD,MAEO,IACL,CAAC,4CAA4CC,IAA5C,CAAiDJ,MAAM,CAACK,KAAxD,CADI,EAEL;AACAJ,MAAAA,KAAK,CAACE,IAAN,GAAa,oBAAb;AACD;;AACD,QAAI,CAACH,MAAM,CAACM,OAAZ,EAAqB;AACnBL,MAAAA,KAAK,CAACK,OAAN,GAAgB,cAAhB;AACD;;AAED,UAAMC,MAAM,GAAGV,SAAS,CAAC;AACvB;AACAW,MAAAA,aAAa,EAAE;AACbN,QAAAA,IAAI,EAAE,EADO;AAEbC,QAAAA,IAAI,EAAE,EAFO;AAGbG,QAAAA,OAAO,EAAE;AAHI,OAFQ;AAOvB;AACAP,MAAAA;AARuB,KAAD,CAAxB;AAUA;AACD,GA9BD;AA+BD,CAhCD;;AAkCA,eAAeD,UAAf","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\n\n//validate 는 객체를 반환한다.\n\n//SignupForm는 export할 컴포넌트 이름\nconst SignupForm = () => {\n  const validate = function (values) {\n    //values.name values.mail values.channel\n    //error.name error.mail error.channel\n    const error = {};\n    // name 로직\n    if (!values.name) {\n      error.name = \"필수 입력 정보 입니다\";\n    }\n    if (!values.mail) {\n      error.mail = \"필수 입력 정보 입니다\";\n    } else if (\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\n    ) {\n      error.mail = \"이메일의 형식이 올바르지 않습니다\";\n    }\n    if (!values.channel) {\n      error.channel = \"필수 입력 정보 입니다\";\n    }\n\n    const formik = useFormik({\n      //useFormik의 method : 각 form 의 초기값\n      initialValues: {\n        name: \"\",\n        mail: \"\",\n        channel: \"\",\n      },\n      //useFormik의 method : 각 form 의 validation check\n      validate,\n    });\n    return;\n  };\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}