{"ast":null,"code":"var _jsxFileName = \"/Users/yesang-gi/Documents/workspace/atnp-signup/src/components/SignupForm.jsx\";\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage, FieldArray, FastField } from \"formik\";\nimport * as Yup from \"yup\";\nimport TextError from \"./TextError\";\nconst initialValues = {\n  name: \"Vishwas\",\n  email: \"\",\n  channel: \"\",\n  comments: \"\",\n  address: \"\",\n  social: {\n    facebook: \"\",\n    twitter: \"\"\n  },\n  phoneNumbers: [\"\", \"\"],\n  phNumbers: [\"\"]\n};\nconst savedValues = {\n  name: \"Vishwas\",\n  email: \"v@example.com\",\n  channel: \"codevolution\",\n  comments: \"Welcome to Formik\",\n  address: \"221B Baker Street\",\n  social: {\n    facebook: \"\",\n    twitter: \"\"\n  },\n  phoneNumbers: [\"\", \"\"],\n  phNumbers: [\"\"]\n};\n\nconst onSubmit = (values, submitProps) => {\n  console.log(\"Form data\", values);\n  console.log(\"submitProps\", submitProps);\n  submitProps.setSubmitting(false);\n  submitProps.resetForm();\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required(\"Required\"),\n  email: Yup.string().email(\"Invalid email format\").required(\"Required\"),\n  channel: Yup.string().required(\"Required\"),\n  comments: Yup.string().required(\"Required\")\n});\n\nconst validateComments = value => {\n  let error;\n\n  if (!value) {\n    error = \"Required\";\n  }\n\n  return error;\n};\n\nfunction YoutubeForm() {\n  const [formValues, setFormValues] = useState(null);\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: formValues || initialValues,\n    validationSchema: validationSchema,\n    onSubmit: onSubmit,\n    enableReinitialize: true // validateOnChange={false}\n    // validateOnBlur={false}\n    // validateOnMount\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, formik => {\n    console.log(\"Formik props\", formik);\n    return /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"name\",\n      component: TextError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"email\",\n      id: \"email\",\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, error => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 29\n      }\n    }, error))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"channel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, \"Channel\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      id: \"channel\",\n      name: \"channel\",\n      placeholder: \"YouTube channel name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"channel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }\n    }, \"Comments\"), /*#__PURE__*/React.createElement(Field, {\n      as: \"textarea\",\n      id: \"comments\",\n      name: \"comments\",\n      validate: validateComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"comments\",\n      component: TextError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, \"Address\"), /*#__PURE__*/React.createElement(FastField, {\n      name: \"address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, ({\n      field,\n      form,\n      meta\n    }) => {\n      // console.log('Field render')\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", Object.assign({\n        type: \"text\"\n      }, field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 23\n        }\n      })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, meta.error) : null);\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"facebook\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 15\n      }\n    }, \"Facebook profile\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      id: \"facebook\",\n      name: \"social.facebook\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"twitter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }, \"Twitter profile\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      id: \"twitter\",\n      name: \"social.twitter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"primaryPh\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }, \"Primary phone number\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      id: \"primaryPh\",\n      name: \"phoneNumbers[0]\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"secondaryPh\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, \"Secondary phone number\"), /*#__PURE__*/React.createElement(Field, {\n      type: \"text\",\n      id: \"secondaryPh\",\n      name: \"phoneNumbers[1]\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, \"List of phone numbers\"), /*#__PURE__*/React.createElement(FieldArray, {\n      name: \"phNumbers\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }, fieldArrayProps => {\n      const {\n        push,\n        remove,\n        form\n      } = fieldArrayProps;\n      const {\n        values\n      } = form;\n      const {\n        phNumbers\n      } = values; // console.log('fieldArrayProps', fieldArrayProps)\n      // console.log('Form errors', form.errors)\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }\n      }, phNumbers.map((phNumber, index) => /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Field, {\n        name: `phNumbers[${index}]`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 27\n        }\n      }), index > 0 && /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => remove(index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }\n      }, \"-\"))), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => push(\"\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 23\n        }\n      }, \"+\"));\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: () => setFormValues(savedValues),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, \"Load saved data\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"reset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, \"Reset\"), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: !formik.isValid || formik.isSubmitting,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, \"Submit\"));\n  });\n}\n\nexport default YoutubeForm;","map":{"version":3,"sources":["/Users/yesang-gi/Documents/workspace/atnp-signup/src/components/SignupForm.jsx"],"names":["React","useState","Formik","Form","Field","ErrorMessage","FieldArray","FastField","Yup","TextError","initialValues","name","email","channel","comments","address","social","facebook","twitter","phoneNumbers","phNumbers","savedValues","onSubmit","values","submitProps","console","log","setSubmitting","resetForm","validationSchema","object","string","required","validateComments","value","error","YoutubeForm","formValues","setFormValues","formik","field","form","meta","touched","fieldArrayProps","push","remove","map","phNumber","index","isValid","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Formik,\n  Form,\n  Field,\n  ErrorMessage,\n  FieldArray,\n  FastField,\n} from \"formik\";\nimport * as Yup from \"yup\";\nimport TextError from \"./TextError\";\n\nconst initialValues = {\n  name: \"Vishwas\",\n  email: \"\",\n  channel: \"\",\n  comments: \"\",\n  address: \"\",\n  social: {\n    facebook: \"\",\n    twitter: \"\",\n  },\n  phoneNumbers: [\"\", \"\"],\n  phNumbers: [\"\"],\n};\n\nconst savedValues = {\n  name: \"Vishwas\",\n  email: \"v@example.com\",\n  channel: \"codevolution\",\n  comments: \"Welcome to Formik\",\n  address: \"221B Baker Street\",\n  social: {\n    facebook: \"\",\n    twitter: \"\",\n  },\n  phoneNumbers: [\"\", \"\"],\n  phNumbers: [\"\"],\n};\n\nconst onSubmit = (values, submitProps) => {\n  console.log(\"Form data\", values);\n  console.log(\"submitProps\", submitProps);\n  submitProps.setSubmitting(false);\n  submitProps.resetForm();\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required(\"Required\"),\n  email: Yup.string().email(\"Invalid email format\").required(\"Required\"),\n  channel: Yup.string().required(\"Required\"),\n  comments: Yup.string().required(\"Required\"),\n});\n\nconst validateComments = (value) => {\n  let error;\n  if (!value) {\n    error = \"Required\";\n  }\n  return error;\n};\n\nfunction YoutubeForm() {\n  const [formValues, setFormValues] = useState(null);\n  return (\n    <Formik\n      initialValues={formValues || initialValues}\n      validationSchema={validationSchema}\n      onSubmit={onSubmit}\n      enableReinitialize\n      // validateOnChange={false}\n      // validateOnBlur={false}\n      // validateOnMount\n    >\n      {(formik) => {\n        console.log(\"Formik props\", formik);\n        return (\n          <Form>\n            <div className=\"form-control\">\n              <label htmlFor=\"name\">Name</label>\n              <Field type=\"text\" id=\"name\" name=\"name\" />\n              <ErrorMessage name=\"name\" component={TextError} />\n            </div>\n\n            <div className=\"form-control\">\n              <label htmlFor=\"email\">Email</label>\n              <Field type=\"email\" id=\"email\" name=\"email\" />\n              <ErrorMessage name=\"email\">\n                {(error) => <div className=\"error\">{error}</div>}\n              </ErrorMessage>\n            </div>\n\n            <div className=\"form-control\">\n              <label htmlFor=\"channel\">Channel</label>\n              <Field\n                type=\"text\"\n                id=\"channel\"\n                name=\"channel\"\n                placeholder=\"YouTube channel name\"\n              />\n              <ErrorMessage name=\"channel\" />\n            </div>\n\n            <div className=\"form-control\">\n              <label htmlFor=\"comments\">Comments</label>\n              <Field\n                as=\"textarea\"\n                id=\"comments\"\n                name=\"comments\"\n                validate={validateComments}\n              />\n              <ErrorMessage name=\"comments\" component={TextError} />\n            </div>\n\n            <div className=\"form-control\">\n              <label htmlFor=\"address\">Address</label>\n              <FastField name=\"address\">\n                {({ field, form, meta }) => {\n                  // console.log('Field render')\n                  return (\n                    <div>\n                      <input type=\"text\" {...field} />\n                      {meta.touched && meta.error ? (\n                        <div>{meta.error}</div>\n                      ) : null}\n                    </div>\n                  );\n                }}\n              </FastField>\n            </div>\n\n            <div className=\"form-control\">\n              <label htmlFor=\"facebook\">Facebook profile</label>\n              <Field type=\"text\" id=\"facebook\" name=\"social.facebook\" />\n            </div>\n\n            <div className=\"form-control\">\n              <label htmlFor=\"twitter\">Twitter profile</label>\n              <Field type=\"text\" id=\"twitter\" name=\"social.twitter\" />\n            </div>\n\n            <div className=\"form-control\">\n              <label htmlFor=\"primaryPh\">Primary phone number</label>\n              <Field type=\"text\" id=\"primaryPh\" name=\"phoneNumbers[0]\" />\n            </div>\n\n            <div className=\"form-control\">\n              <label htmlFor=\"secondaryPh\">Secondary phone number</label>\n              <Field type=\"text\" id=\"secondaryPh\" name=\"phoneNumbers[1]\" />\n            </div>\n\n            <div className=\"form-control\">\n              <label>List of phone numbers</label>\n              <FieldArray name=\"phNumbers\">\n                {(fieldArrayProps) => {\n                  const { push, remove, form } = fieldArrayProps;\n                  const { values } = form;\n                  const { phNumbers } = values;\n                  // console.log('fieldArrayProps', fieldArrayProps)\n                  // console.log('Form errors', form.errors)\n                  return (\n                    <div>\n                      {phNumbers.map((phNumber, index) => (\n                        <div key={index}>\n                          <Field name={`phNumbers[${index}]`} />\n                          {index > 0 && (\n                            <button type=\"button\" onClick={() => remove(index)}>\n                              -\n                            </button>\n                          )}\n                        </div>\n                      ))}\n                      <button type=\"button\" onClick={() => push(\"\")}>\n                        +\n                      </button>\n                    </div>\n                  );\n                }}\n              </FieldArray>\n            </div>\n            {/* <button\n              type='button'\n              onClick={() => formik.validateField('comments')}\n            >\n              Validate comments\n            </button>\n            <button\n              type='button'\n              onClick={() => formik.setFieldTouched('comments')}\n            >\n              Visit comments\n            </button>\n            <button type='button' onClick={() => formik.validateForm()}>\n              Validate all\n            </button>\n            <button\n              type='button'\n              onClick={() =>\n                formik.setTouched({\n                  name: true,\n                  email: true,\n                  channel: true,\n                  comments: true\n                })\n              }\n            >\n              Visit all\n            </button> */}\n            <button type=\"button\" onClick={() => setFormValues(savedValues)}>\n              Load saved data\n            </button>\n            <button type=\"reset\">Reset</button>\n            <button\n              type=\"submit\"\n              disabled={!formik.isValid || formik.isSubmitting}\n            >\n              Submit\n            </button>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n}\n\nexport default YoutubeForm;\n"]},"metadata":{},"sourceType":"module"}