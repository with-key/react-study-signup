{"ast":null,"code":"var _jsxFileName = \"/Users/yesang-gi/Documents/workspace/atnp-signup/src/components/SignupForm.jsx\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport styled from \"styled-components\";\n/* \n\nformik tutorial \n\n1. initialValues 생성\n  initialValues 객체에 저장된 key, value 는 formik의 value 객체로 저장됨\n  즉, Values는 formik.values.key 임\n\n  initialValues객체의 키는 jsx의 input의 name 속성과 일치 시켜야 함\n\n\n2. valiedate 로직 생성\n  valiedate()는 파라미터로 fromik.value를 가져와야 함\n\n\n\n\n*/\n\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  channel: \"\"\n}; // input의 values를 객체로 반환함\n\nconst onSubmit = values => {\n  console.log(values);\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"필수\";\n  } else if (values.name.length < 4) {\n    errors.name = \"4자 이상 입력해주세요\";\n  }\n\n  if (!values.email) {\n    errors.email = \"필수\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"형식이 올바르지 않습니다\";\n  }\n\n  if (!values.channel) {\n    errors.channel = \"필수\";\n  }\n\n  return errors;\n}; //\n\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues,\n    validate,\n    onSubmit\n  });\n  return /*#__PURE__*/React.createElement(Conatainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uB984\"), /*#__PURE__*/React.createElement(ContentBx, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    onChange: formik.handleChange,\n    value: formik.values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ValidElert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, formik.errors.name)), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBA54\\uC77C\"), /*#__PURE__*/React.createElement(ContentBx, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"email\",\n    name: \"email\",\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ValidElert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, formik.errors.email)), /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, \"\\uC720\\uC785\\uACBD\\uB85C\"), /*#__PURE__*/React.createElement(ContentBx, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"channel\",\n    name: \"channel\",\n    onChange: formik.handleChange,\n    value: formik.values.channel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ValidElert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, formik.errors.channel)), /*#__PURE__*/React.createElement(Submitbtn, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \"\\uD655\\uC778\")));\n}; //style\n\n\nconst Conatainer = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Label = styled.label`\n  display: block;\n  margin-top: 30px;\n`;\nconst ContentBx = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n`;\nconst ValidElert = styled.div`\n  color: red;\n`;\nconst Form = styled.form`\n  width: 500px;\n  border: 1px solid #ddd;\n  padding: 30px;\n  border-radius: 10px;\n`;\nconst Input = styled.input`\n  width: 400px;\n  height: 40px;\n  border: 1px solid #ddd;\n  border-radius: 10px;\n  margin: 10px 0;\n  padding: 0 20px;\n`;\nconst Submitbtn = styled.button`\n  margin-top: 100px;\n  width: 100%;\n  border: none;\n  height: 40px;\n  :\n`;\nexport default SignupForm;","map":{"version":3,"sources":["/Users/yesang-gi/Documents/workspace/atnp-signup/src/components/SignupForm.jsx"],"names":["React","useFormik","styled","initialValues","name","email","channel","onSubmit","values","console","log","validate","errors","length","test","SignupForm","formik","handleSubmit","handleChange","Conatainer","div","Label","label","ContentBx","ValidElert","Form","form","Input","input","Submitbtn","button"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport styled from \"styled-components\";\n\n/* \n\nformik tutorial \n\n1. initialValues 생성\n  initialValues 객체에 저장된 key, value 는 formik의 value 객체로 저장됨\n  즉, Values는 formik.values.key 임\n\n  initialValues객체의 키는 jsx의 input의 name 속성과 일치 시켜야 함\n\n\n2. valiedate 로직 생성\n  valiedate()는 파라미터로 fromik.value를 가져와야 함\n\n\n\n\n*/\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  channel: \"\",\n};\n\n// input의 values를 객체로 반환함\nconst onSubmit = (values) => {\n  console.log(values);\n};\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"필수\";\n  } else if (values.name.length < 4) {\n    errors.name = \"4자 이상 입력해주세요\";\n  }\n\n  if (!values.email) {\n    errors.email = \"필수\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"형식이 올바르지 않습니다\";\n  }\n\n  if (!values.channel) {\n    errors.channel = \"필수\";\n  }\n\n  return errors;\n};\n\n//\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues,\n    validate,\n    onSubmit,\n  });\n\n  return (\n    <Conatainer>\n      <Form onSubmit={formik.handleSubmit}>\n        <Label>이름</Label>\n        <ContentBx>\n          <Input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n          ></Input>\n          <ValidElert>{formik.errors.name}</ValidElert>\n        </ContentBx>\n\n        <Label>이메일</Label>\n        <ContentBx>\n          <Input\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          ></Input>\n          <ValidElert>{formik.errors.email}</ValidElert>\n        </ContentBx>\n\n        <Label>유입경로</Label>\n        <ContentBx>\n          <Input\n            type=\"text\"\n            id=\"channel\"\n            name=\"channel\"\n            onChange={formik.handleChange}\n            value={formik.values.channel}\n          ></Input>\n          <ValidElert>{formik.errors.channel}</ValidElert>\n        </ContentBx>\n        <Submitbtn type=\"submit\">확인</Submitbtn>\n      </Form>\n    </Conatainer>\n  );\n};\n\n//style\nconst Conatainer = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Label = styled.label`\n  display: block;\n  margin-top: 30px;\n`;\n\nconst ContentBx = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-top: 10px;\n`;\n\nconst ValidElert = styled.div`\n  color: red;\n`;\n\nconst Form = styled.form`\n  width: 500px;\n  border: 1px solid #ddd;\n  padding: 30px;\n  border-radius: 10px;\n`;\n\nconst Input = styled.input`\n  width: 400px;\n  height: 40px;\n  border: 1px solid #ddd;\n  border-radius: 10px;\n  margin: 10px 0;\n  padding: 0 20px;\n`;\n\nconst Submitbtn = styled.button`\n  margin-top: 100px;\n  width: 100%;\n  border: none;\n  height: 40px;\n  :\n`;\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}