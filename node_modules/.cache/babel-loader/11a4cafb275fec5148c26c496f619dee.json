{"ast":null,"code":"var _jsxFileName = \"/Users/yesang-gi/Documents/workspace/atnp-signup/src/components/SignupForm.jsx\";\nimport React from \"react\";\nimport { useFormik } from \"formik\"; // const validationSchema = object().shape({\n//   email: string().email(\"이메일 형식에 맞춰주세요.\").required(\"입력해주세요.\"),\n//   password: string().required(\"비밀번호를 입력해주세요.\"),\n//   age: number().required(\"입력해주세요\"),\n// });\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  return errors;\n};\n\nexport const SignupForm = () => {\n  const initialValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const formik = useFormik({\n    initialValues,\n    validate,\n    onSubmit: values => console.log(values)\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, \"\\uD68C\\uC6D0\\uAC00\\uC785 \\uC591\\uC2DD\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    value: formik.values.email,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, formik.errors.email)), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    value: formik.values.password,\n    onChange: formik.handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, formik.errors.password)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"\\uC804\\uC1A1\")));\n};","map":{"version":3,"sources":["/Users/yesang-gi/Documents/workspace/atnp-signup/src/components/SignupForm.jsx"],"names":["React","useFormik","validate","values","errors","email","test","password","SignupForm","initialValues","formik","onSubmit","console","log","handleSubmit","handleChange","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3B,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,CAACD,MAAM,CAACE,KAAZ,EAAmB;AACjBD,IAAAA,MAAM,CAACC,KAAP,GAAe,UAAf;AACD,GAFD,MAEO,IAAI,CAAC,4CAA4CC,IAA5C,CAAiDH,MAAM,CAACE,KAAxD,CAAL,EAAqE;AAC1ED,IAAAA,MAAM,CAACC,KAAP,GAAe,uBAAf;AACD;;AAED,MAAI,CAACF,MAAM,CAACI,QAAZ,EAAsB;AACpBH,IAAAA,MAAM,CAACG,QAAP,GAAkB,UAAlB;AACD;;AAED,SAAOH,MAAP;AACD,CAbD;;AAeA,OAAO,MAAMI,UAAU,GAAG,MAAM;AAC9B,QAAMC,aAAa,GAAG;AACpBJ,IAAAA,KAAK,EAAE,EADa;AAEpBE,IAAAA,QAAQ,EAAE;AAFU,GAAtB;AAIA,QAAMG,MAAM,GAAGT,SAAS,CAAC;AACvBQ,IAAAA,aADuB;AAEvBP,IAAAA,QAFuB;AAGvBS,IAAAA,QAAQ,EAAGR,MAAD,IAAYS,OAAO,CAACC,GAAR,CAAYV,MAAZ;AAHC,GAAD,CAAxB;AAMA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADF,eAEE;AAAM,IAAA,QAAQ,EAAEO,MAAM,CAACI,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEJ,MAAM,CAACP,MAAP,CAAcE,KAHvB;AAIE,IAAA,QAAQ,EAAEK,MAAM,CAACK,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCN,MAAM,CAACN,MAAP,CAAcC,KAA/C,CADF,CARF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEK,MAAM,CAACP,MAAP,CAAcI,QAHvB;AAIE,IAAA,QAAQ,EAAEG,MAAM,CAACK,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCN,MAAM,CAACN,MAAP,CAAcG,QAA/C,CADF,CAlBF,eAqBE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBArBF,CAFF,CADF;AA4BD,CAvCM","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\n\n// const validationSchema = object().shape({\n//   email: string().email(\"이메일 형식에 맞춰주세요.\").required(\"입력해주세요.\"),\n//   password: string().required(\"비밀번호를 입력해주세요.\"),\n//   age: number().required(\"입력해주세요\"),\n// });\n\nconst validate = (values) => {\n  const errors = {};\n  if (!values.email) {\n    errors.email = \"Required\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"Invalid email address\";\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\";\n  }\n\n  return errors;\n};\n\nexport const SignupForm = () => {\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n  };\n  const formik = useFormik({\n    initialValues,\n    validate,\n    onSubmit: (values) => console.log(values),\n  });\n\n  return (\n    <>\n      <label>회원가입 양식</label>\n      <form onSubmit={formik.handleSubmit}>\n        <label>email</label>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n        />\n        <div>\n          <label style={{ color: \"red\" }}>{formik.errors.email}</label>\n        </div>\n        <label>password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n        />\n        <div>\n          <label style={{ color: \"red\" }}>{formik.errors.password}</label>\n        </div>\n        <button type=\"submit\">전송</button>\n      </form>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}