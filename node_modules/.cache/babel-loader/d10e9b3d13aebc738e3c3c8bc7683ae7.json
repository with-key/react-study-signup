{"ast":null,"code":"var _jsxFileName = \"/Users/yesang-gi/Documents/workspace/atnp-signup/src/components/SignupForm.jsx\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\n\nconst SignupForm = () => {\n  const initialValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const formik = useFormik({\n    initialValues: initialValues,\n    validate: validate,\n    onSubmit: values => console.log(values)\n  });\n  return (\n    /*#__PURE__*/\n    //마크업\n    React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, \"\\uD68C\\uC6D0\\uAC00\\uC785 \\uC591\\uC2DD\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: formik.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, \"email\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: formik.values.email,\n      onChange: formik.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, formik.errors.email)), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, \"password\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: formik.values.password,\n      onChange: formik.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, formik.errors.password)), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, \"\\uC804\\uC1A1\")))\n  );\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = \"이메일을 입력해주세요.\"; //아무것도 입력하지 않았을 때\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"이메일 형식이 아닙니다.\"; // 조건의 형식이 아닐 때\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\"; // 아무것도 입력하지 않았을 때\n  }\n\n  return errors;\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/Users/yesang-gi/Documents/workspace/atnp-signup/src/components/SignupForm.jsx"],"names":["React","useFormik","SignupForm","initialValues","email","password","formik","validate","onSubmit","values","console","log","handleSubmit","handleChange","color","errors","test"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;;AAEA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,aAAa,GAAG;AACpBC,IAAAA,KAAK,EAAE,EADa;AAEpBC,IAAAA,QAAQ,EAAE;AAFU,GAAtB;AAIA,QAAMC,MAAM,GAAGL,SAAS,CAAC;AACvBE,IAAAA,aAAa,EAAEA,aADQ;AAEvBI,IAAAA,QAAQ,EAAEA,QAFa;AAGvBC,IAAAA,QAAQ,EAAGC,MAAD,IAAYC,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAHC,GAAD,CAAxB;AAMA;AAAA;AACE;AACA,2DACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CADF,eAEE;AAAM,MAAA,QAAQ,EAAEH,MAAM,CAACM,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAEN,MAAM,CAACG,MAAP,CAAcL,KAHvB;AAIE,MAAA,QAAQ,EAAEE,MAAM,CAACO,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCR,MAAM,CAACS,MAAP,CAAcX,KAA/C,CADF,CARF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAYE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,KAAK,EAAEE,MAAM,CAACG,MAAP,CAAcJ,QAHvB;AAIE,MAAA,QAAQ,EAAEC,MAAM,CAACO,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCR,MAAM,CAACS,MAAP,CAAcV,QAA/C,CADF,CAlBF,eAqBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBArBF,CAFF;AAFF;AA6BD,CAxCD;;AA0CA,MAAME,QAAQ,GAAIE,MAAD,IAAY;AAC3B,QAAMM,MAAM,GAAG,EAAf;;AAEA,MAAI,CAACN,MAAM,CAACL,KAAZ,EAAmB;AACjBW,IAAAA,MAAM,CAACX,KAAP,GAAe,cAAf,CADiB,CACc;AAChC,GAFD,MAEO,IAAI,CAAC,4CAA4CY,IAA5C,CAAiDP,MAAM,CAACL,KAAxD,CAAL,EAAqE;AAC1EW,IAAAA,MAAM,CAACX,KAAP,GAAe,eAAf,CAD0E,CAC1C;AACjC;;AAED,MAAI,CAACK,MAAM,CAACJ,QAAZ,EAAsB;AACpBU,IAAAA,MAAM,CAACV,QAAP,GAAkB,UAAlB,CADoB,CACU;AAC/B;;AAED,SAAOU,MAAP;AACD,CAdD;;AAgBA,eAAeb,UAAf","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\n\nconst SignupForm = () => {\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n  };\n  const formik = useFormik({\n    initialValues: initialValues,\n    validate: validate,\n    onSubmit: (values) => console.log(values),\n  });\n\n  return (\n    //마크업\n    <>\n      <label>회원가입 양식</label>\n      <form onSubmit={formik.handleSubmit}>\n        <label>email</label>\n        <input\n          type=\"text\"\n          name=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n        />\n        <div>\n          <label style={{ color: \"red\" }}>{formik.errors.email}</label>\n        </div>\n        <label>password</label>\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n        />\n        <div>\n          <label style={{ color: \"red\" }}>{formik.errors.password}</label>\n        </div>\n        <button type=\"submit\">전송</button>\n      </form>\n    </>\n  );\n};\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.email) {\n    errors.email = \"이메일을 입력해주세요.\"; //아무것도 입력하지 않았을 때\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = \"이메일 형식이 아닙니다.\"; // 조건의 형식이 아닐 때\n  }\n\n  if (!values.password) {\n    errors.password = \"Required\"; // 아무것도 입력하지 않았을 때\n  }\n\n  return errors;\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}