{"ast":null,"code":"var _jsxFileName = \"/Users/yesang-gi/Documents/workspace/atnp-signup/src/components/SignupForm.jsx\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport styled from \"styled-components\";\n/* \n\nformik tutorial \n\n1. initialValues 생성\n  initialValues 객체에 저장된 key, value 는 \"Values\"로 저장됨 \n  values는 formik.value 임\n\n  initialValues객체의 키는 jsx의 input name property와 일치 시켜야 함\n\n\n2. valiedate 로직 생성\n  valiedate()는 파라미터로 fromik.value를 가져와야 함\n\n\n\n\n*/\n\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  channel: \"\"\n}; // \n\nconst onSubmit = values => {\n  console.log(values);\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"필수 기입사항입니다\";\n  }\n\n  if (!values.email) {\n    errors.email = \"필수 기입사항입니다\";\n  }\n\n  if (!values.channel) {\n    errors.channel = \"필수 기입사항입니다\";\n  }\n\n  return errors;\n};\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues,\n    validate,\n    onSubmit\n  });\n  return /*#__PURE__*/React.createElement(Conatainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: formik.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"\\uC774\\uB984\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    onChange: formik.handleChange,\n    value: formik.values.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ValidElert, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, formik.errors.name)), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"\\uC774\\uBA54\\uC77C\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"email\",\n    name: \"email\",\n    onChange: formik.handleChange,\n    value: formik.values.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, formik.errors.email)), /*#__PURE__*/React.createElement(Div, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"\\uC720\\uC785\\uACBD\\uB85C\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"channel\",\n    name: \"channel\",\n    onChange: formik.handleChange,\n    value: formik.values.channel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }, formik.errors.channel)), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, \"\\uD655\\uC778\")));\n}; //style\n\n\nconst Conatainer = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Label = styled.label`\n  display: block;\n  margib\n`;\nconst ValidElert = styled.div`\n  color: red;\n`;\nconst Form = styled.form``;\nconst Input = styled.input``;\nconst Div = styled.div`\n  margin: 10px 0;\n`;\nexport default SignupForm;","map":{"version":3,"sources":["/Users/yesang-gi/Documents/workspace/atnp-signup/src/components/SignupForm.jsx"],"names":["React","useFormik","styled","initialValues","name","email","channel","onSubmit","values","console","log","validate","errors","SignupForm","formik","handleSubmit","handleChange","Conatainer","div","Label","label","ValidElert","Form","form","Input","input","Div"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport styled from \"styled-components\";\n\n/* \n\nformik tutorial \n\n1. initialValues 생성\n  initialValues 객체에 저장된 key, value 는 \"Values\"로 저장됨 \n  values는 formik.value 임\n\n  initialValues객체의 키는 jsx의 input name property와 일치 시켜야 함\n\n\n2. valiedate 로직 생성\n  valiedate()는 파라미터로 fromik.value를 가져와야 함\n\n\n\n\n*/\nconst initialValues = {\n  name: \"\",\n  email: \"\",\n  channel: \"\",\n};\n\n// \nconst onSubmit = (values) => {\n  console.log(values);\n};\n\nconst validate = (values) => {\n  const errors = {};\n\n  if (!values.name) {\n    errors.name = \"필수 기입사항입니다\";\n  }\n\n  if (!values.email) {\n    errors.email = \"필수 기입사항입니다\";\n  }\n\n  if (!values.channel) {\n    errors.channel = \"필수 기입사항입니다\";\n  }\n\n  return errors;\n};\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues,\n    validate,\n    onSubmit,\n  });\n\n  return (\n    <Conatainer>\n      <Form onSubmit={formik.handleSubmit}>\n        <Div>\n          <Label>이름</Label>\n          <Input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            onChange={formik.handleChange}\n            value={formik.values.name}\n          ></Input>\n          <ValidElert>{formik.errors.name}</ValidElert>\n        </Div>\n        <Div>\n          <Label>이메일</Label>\n          <Input\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            onChange={formik.handleChange}\n            value={formik.values.email}\n          ></Input>\n          <div>{formik.errors.email}</div>\n        </Div>\n        <Div>\n          <Label>유입경로</Label>\n          <Input\n            type=\"text\"\n            id=\"channel\"\n            name=\"channel\"\n            onChange={formik.handleChange}\n            value={formik.values.channel}\n          ></Input>\n          <div>{formik.errors.channel}</div>\n        </Div>\n        <button type=\"submit\">확인</button>\n      </Form>\n    </Conatainer>\n  );\n};\n\n//style\nconst Conatainer = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nconst Label = styled.label`\n  display: block;\n  margib\n`;\nconst ValidElert = styled.div`\n  color: red;\n`;\nconst Form = styled.form``;\n\nconst Input = styled.input``;\n\nconst Div = styled.div`\n  margin: 10px 0;\n`;\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}